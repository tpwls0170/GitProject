1.시작 노드와 목적지 노드를 분명하게 정한다

F = 이동비용 + 예상비용
F = G + H;

G = 시작점으로부터 경로를 따라 이동비용
H = 휴리스틱 추정 값으로 해당 노드에서 최종 목적지까지 도달하는데 소요되는 추정
부모노드 = 해당노드에 도달하기 직전 거치는 노드 번호

오픈노드와 닫힌노드가 존재하고 우선 모든 열린 목록을 오픈노드에 집어넣는다.
그다음 최단 경로를 분석하기 위해서는 상태 값들이 계속 갱신되어야 하는데
이 과정에서 경로가 분석된 노드들을 닫힌노드에 담아둔다.

제일 먼저 출발 선인 0번 노드를 오픈과 닫힌 노드에 집어넣는다.
이때 0번 노드의 주변 노드를 열린노드에 집어넣는다.
0번 근처에 1과 3번 노드가 있으므로 1과 3이 열린 노드에 들어가게 되는 것이다.
1과 3의 정보 F,G,H, 부모노드 4가지의 정보를 담고 있어야 한다.

우선 1번 노드부터 시작하자
0번부터 1번까지 G값은 5.6이다.
H값은 추정하기 위한 기준이다. 따라서 1번 기준에서 도착 6번까지 
대략 측정하니 12!
F = G + H 이므로 5.6 + 12 = 17.6이 된다.

그다음 3번 노드
G 값은 6.8
H 값은 10
F 값은 16.8

이중 다음 출발지점을 구해야 한다. 1번과 3번을 비교했을 때 더 가까운 F값을 가진
3번 노드를 닫힌 노드에 집어넣는다. 즉 여기서 닫힌 노드는 이동지점을 알 수 있는
노드라는 것을 알 수 있다.

다시 3번노드 기준으로 오픈 리스트에 주변 노드를 집어넣어야 하므로
2번과 5번을 넣는다.
자 여기서 알아야할 점은 G값을 첫 시작점 0번노드에서의 거리 값도 같이 넣어야 한다
따라서 2번노드의 6.8 + 5.6 이므로 12.4 
H값은 7 따라서
F 값은 19.4

5번 G값은 6.5+6.8 이므로 13.3 
H값은 5.5 따라서
F 값은 18.8이 된다.

오픈리스트에 1번과 2번 5번이 있으므로 이중 F 값이 가장 작은
1번 노드를 닫힌 노드에 집어넣는다.
1번노드 주변 2번 4번 노드!
우선 4번노드는 열린 목록에 없었으므로 기존 방식으로 계산하여 추가하면 된다.
하지만 2번 노드는 전단계에서 이미 추가된 기록이 있으므로 이때 방법은
전 단계에서 추가된 G값이 새롭게 계산된 G 값보다 크다면 새롭게 계사된 FGH로
갱신을 해준다.
자 계산을 해보자!
우선 오픈리스트에 2번과 5번 추가된 4번이 있다.
여기서 5번은 기록되어 있고 4번을 추가하자
4번 같은 경우에 G값은 6.5+ 5.6 = 12.1
H 값은 5.2 
F 값은 17.3

2번은 전 G값과 현재 G값을 비교한다. 12.4 > 9.9 이므로 현재가 작다
따라서 갱신을 한다. 따라서 G 값은 9.9 추가
H 값은  7 F 값은 16.9가 된다.

자 여기서 2 5 4 중 F값이 가장 작은 2번노드를 닫힌노드에 집어넣는다.

닫힌노드는 0 -> 3 -> 1 -> 2
열린노드는 5 와 4

2번 기준으로 5번노드 3번노드 6번노드가 있다.
이중 5번노드은 기존 열린노드에 존재하고 기존 G값보다 크므로 갱신 X
3번노드는 닫힌노드에 있으므로 제외
따라서 남은 마지막 도착지점 6번노드에 대한 값을 계산하여 추가한다.

5.6+4.3+7 = 16.9 G
H = 0 
F = 16.9

오픈 리스트중 5 4 6 중
가장 작은 F값은 6번이므로
닫힌목록에 추가한다. 근데 이 6번이 최종이므로 A* 알고리즘은 종료가된다.

따라서 최단 경로는 0번 1번 2번 6번노드가 된다.



